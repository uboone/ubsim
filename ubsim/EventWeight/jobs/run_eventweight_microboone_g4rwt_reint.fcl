#include "services_microboone.fcl"
#include "microboone_eventweight_service.fcl"
#include "seedservice_microboone.fcl"
#include "eventweight_microboone.fcl"

process_name: EventWeight

services: {
  TimeTracker: {}
  MemoryTracker: {}
  RandomNumberGenerator: {}
  FileCatalogMetadata: @local::art_file_catalog_mc
  NuRandomService: @local::microboone_seedservice
  UBEventWeight: @local::microboone_eventweight_service
  TFileService: { fileName: "microboone_reint_hist.root" }
  ExptGeoHelperInterface: @local::microboone_geometry_helper
  Geometry: @local::microboone_geo
}

source: {
  module_type: RootInput
}

physics: {
 producers: {
   eventweightreint:  @local::microboone_eventweight_justreint
   rns: {
     module_type: "RandomNumberSaver"
   }
 }

 simulate: [ rns, eventweightreint ]
 stream1: [ out1 ]
 trigger_paths: [ simulate ]
 end_paths: [ stream1 ]
}

outputs: {
 out1: {
   module_type: RootOutput
   fileName: "%ifb_%tc_eventweightreint.root"
   dataTier: "simulated"
   compressionLevel: 1
 }
}
physics.producers.eventweightreint.reinteractions_kminus.debug: false
physics.producers.eventweightreint.reinteractions_kplus.debug: false
physics.producers.eventweightreint.reinteractions_piminus.debug: false
physics.producers.eventweightreint.reinteractions_piplus.debug: false
physics.producers.eventweightreint.reinteractions_proton.debug: false